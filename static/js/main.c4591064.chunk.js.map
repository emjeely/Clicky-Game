{"version":3,"sources":["components/Header/index.js","components/Points/index.js","components/Wrap/index.js","components/Container/container.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","id","Points","props","score","maxscore","children","Wrap","image","onClick","update","Container","App","state","data","maxScore","shuffle","i","length","j","Math","floor","random","temp","resetData","map","item","Object","objectSpread","clicked","_this","handleCorrectGuess","newImages","_this$state","newScore","newTopScore","max","setState","handleIncorrectGuess","guessedCorrectly","newItem","_this2","this","components_Header","components_Points","components_Wrap","key","process","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c4591064.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <div className = \"jumbotron\">\r\n      <div className = \"row\">\r\n        <div className = \"col-6\">\r\n          <img src = \"https://media.giphy.com/media/d8SMqAtm3D9bYfOtcs/giphy.gif\" alt = \"disney\" />\r\n        </div>\r\n        <div className = \"col-6\">\r\n          <div className = \"header\">\r\n            <h1 id = \"head\">CLICKY GAME</h1>\r\n            <br></br>\r\n            <h3 id = \"instructions\">click on an image to earn points, but don't click on any more than once!!</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst Points = props => {\r\n  return (\r\n    <div>\r\n    <h1 className = \"text-center score\">\r\n      Score = {props.score}  |  Max Score ={props.maxscore}\r\n    </h1>\r\n    {props.children}\r\n    \r\n    </div>\r\n  )\r\n  \r\n};\r\n\r\nexport default Points;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Wrap = props => {\r\n\r\n  return (\r\n    <div className = \"container-fluid main\">\r\n      <div className = \"img-container\">\r\n      <img className = \"imgclass\" alt = \"not\" src = {props.image} onClick = {() => props.update(props.id)}/>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wrap;","import React from \"react\";\r\n\r\nfunction Container(){\r\n\r\n  return (\r\n    <div className=\"container\"></div>\r\n  )\r\n}\r\n\r\nexport default Container;","import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\nimport Header from \"./components/Header/index.js\";\nimport Points from \"./components/Points/index.js\";\nimport Wrap from \"./components/Wrap/index.js\";\nimport Container from \"./components/Container/container.js\";\nimport data from \"./images.json\";\n\n\nclass App extends Component {\n  state = {\n    data,\n    score: 0,\n    maxScore: 0\n};\n\nshuffle = data =>{\n   for(let i=data.length-1; i>0; i--){\n       const j= Math.floor(Math.random() * (i+1))\n       const temp = data[i];\n       data[i] = data[j];\n       data[j] = temp;\n   }\n   return data;\n}\n\nresetData = data => {\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffle(resetData);\n  };\n\nhandleCorrectGuess = newImages => {\n    const { maxScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = Math.max(newScore, maxScore);\n\n    this.setState({\n      data: this.shuffle(newImages),\n      score: newScore,\n      maxScore: newTopScore\n    });\n  };\n\n  handleIncorrectGuess = data => {\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n    });\n  };\n\n\n\nupdate = (id) => {\n    let guessedCorrectly = false;\n    const newImages = this.state.data.map(item => {\n        const newItem = { ...item };\n        if (newItem.id === id) {\n            if (!newItem.clicked) {\n              newItem.clicked = true;\n              guessedCorrectly = true;\n            }\n          }\n          return newItem;\n    });\n    guessedCorrectly? this.handleCorrectGuess(newImages): this.handleIncorrectGuess(newImages);\n\n}\n\n\nrender() {\n  return (\n    <div className=\"container-fluid\">\n      <Header/>\n        <Points \n          score={this.state.score}\n          maxscore={this.state.maxScore}\n        >\n        {this.state.data.map(item => (\n          <Wrap\n            clicked={item.clicked}\n            alt={item.id}\n            id={item.id}\n            key={item.id}\n            src={process.env.PUBLIC_URL + item.image}\n            image={item.image}\n            update={this.update}\n          />\n        ))}\n        </Points>\n     \n    </div>    \n  )\n}\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}